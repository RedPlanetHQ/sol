
# Electron
PORT=53082 

VERSION=v0.1.26
NODE_ENV=production

############# Common ###############
# POSTGRES
POSTGRES_USER=docker
POSTGRES_PASSWORD=docker
POSTGRES_DB=sol

# Nest run in docker, change host to database container name
DB_HOST=sol-postgres
DB_PORT=5432
DB_SCHEMA=sol

REDIS_URL=sol-redis
REDIS_PORT=6379
REDIS_TLS_DISABLED=true

FRONTEND_HOST=http://localhost:${PORT}
BACKEND_HOST=http://localhost:3001


############# Server ###############
# Prisma database connection
DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DB_HOST}:${DB_PORT}/${POSTGRES_DB}?schema=${DB_SCHEMA}&sslmode=prefer

# Use can you ngrok
OAUTH_CALLBACK_URL=


ANTHROPIC_API_KEY=
############# Frontend ###############
# Sync server url used by the frontend to connect to the websocket
NEXT_PUBLIC_BASE_HOST=${FRONTEND_HOST}
NEXT_PUBLIC_NODE_ENV=${NODE_ENV}
NEXT_PUBLIC_CONTENT_HOST=localhost:1234

# You need to set your domain if self-hosted
PUBLIC_ATTACHMENT_URL=http://localhost:${PORT}/api

# You can add your sentry to get the errors from the application
NEXT_PUBLIC_SENTRY_DSN=http://localhost:8000

############# Trigger.dev ###############
TRIGGER_ACCESS_TOKEN=
TRIGGER_API_URL=http://localhost:8030
NEXT_PUBLIC_TRIGGER_URL=${TRIGGER_API_URL}
TRIGGER_SECRET_KEY=

