name: Production Release

on:
  workflow_dispatch:

jobs:
  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        run: corepack enable && corepack prepare pnpm@latest --activate

      - uses: actions/cache@v4
        with:
          path: "./"
          key: ${{ runner.os }}-modules-${{ hashFiles('./pnpm-lock.yaml') }}

      - name: Install Dependencies
        run: pnpm install
        working-directory: .

      - name: Create .env file
        run: |
          echo "${{ secrets.ENV }}" > .env
        working-directory: .

      - name: Generate Frontend
        run: pnpm build --filter=webapp
        working-directory: .

      - name: Save Artifacts
        uses: actions/upload-artifact@master
        with:
          name: frontend-latest-${{ github.sha }}
          path: apps/webapp/out

  release-linux:
    name: Release Linux
    needs:
      - build-frontend
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.REPO_TOKEN }}

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        run: corepack enable && corepack prepare pnpm@latest --activate

      - uses: actions/cache@v4
        with:
          path: "./"
          key: ${{ runner.os }}-modules-${{ hashFiles('./pnpm-lock.yaml') }}

      - name: Install Dependencies
        run: pnpm install
        working-directory: .

      - name: Download Frontend Artifacts
        uses: actions/download-artifact@master
        with:
          name: frontend-latest-${{ github.sha }}
          path: apps/webapp/out

      - name: Create vendor cache
        run: |
          echo '{"chrome":"128","node":"20"}' > .electron-vendors.cache.json
        working-directory: apps/electron

      - name: Release
        run: pnpm compile:publish
        working-directory: apps/electron

  release-macos-intel:
    name: Release MacOS
    needs:
      - build-frontend
    runs-on: macos-13
    env:
      GH_TOKEN: ${{ secrets.REPO_TOKEN }}
      APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
      APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
      APPLE_ID: ${{ secrets.APPLE_ID }}
      TEAM_ID: ${{ secrets.TEAM_ID }}
      CSC_LINK: ${{ secrets.CERTIFICATE }}
      CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        run: corepack enable && corepack prepare pnpm@latest --activate

      - uses: actions/cache@v4
        with:
          path: "./"
          key: ${{ runner.os }}-modules-${{ hashFiles('./pnpm-lock.yaml') }}

      - name: Install Dependencies
        run: pnpm install
        working-directory: .

      - name: Download Frontend Artifacts
        uses: actions/download-artifact@master
        with:
          name: frontend-latest-${{ github.sha }}
          path: apps/webapp/out

      - name: Create vendor cache
        run: |
          echo '{"chrome":"128","node":"20"}' > .electron-vendors.cache.json
        working-directory: apps/electron

      - name: Release
        run: pnpm compile:publish
        working-directory: apps/electron

  release-macos-intel:
    name: Release MacOS
    needs:
      - build-frontend
    runs-on: macos-13
    env:
      GH_TOKEN: ${{ secrets.REPO_TOKEN }}
      APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
      APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
      APPLE_ID: ${{ secrets.APPLE_ID }}
      TEAM_ID: ${{ secrets.TEAM_ID }}
      CSC_LINK: ${{ secrets.CERTIFICATE }}
      CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        run: corepack enable && corepack prepare pnpm@latest --activate

      - uses: actions/cache@v4
        with:
          path: "./"
          key: ${{ runner.os }}-modules-${{ hashFiles('./pnpm-lock.yaml') }}

      - name: Install Dependencies
        run: pnpm install
        working-directory: .

      - name: Download Frontend Artifacts
        uses: actions/download-artifact@master
        with:
          name: linux-latest-${{ github.sha }}
          path: apps/webapp/out

      - name: Create vendor cache
        run: |
          echo '{"chrome":"128","node":"20"}' > .electron-vendors.cache.json
        working-directory: apps/electron

      - name: Release
        run: pnpm compile:publish
        working-directory: apps/electron
